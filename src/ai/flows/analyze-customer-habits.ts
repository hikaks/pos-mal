// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview This file defines a Genkit flow for analyzing customer shopping habits and providing product recommendations.
 *
 * - analyzeCustomerHabits - A function that triggers the customer habits analysis flow.
 * - AnalyzeCustomerHabitsInput - The input type for the analyzeCustomerHabits function.
 * - AnalyzeCustomerHabitsOutput - The output type for the analyzeCustomerHabits function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeCustomerHabitsInputSchema = z.object({
  customerName: z.string().describe('The name of the customer.'),
  purchaseHistory: z.array(
    z.object({
      productName: z.string().describe('The name of the product purchased.'),
      category: z.string().describe('The category of the product.'),
      purchaseDate: z.string().describe('The date of purchase (YYYY-MM-DD).'),
      quantity: z.number().describe('The quantity of the product purchased.'),
      price: z.number().describe('The price of the product.'),
    })
  ).describe('The customer purchase history.'),
});
export type AnalyzeCustomerHabitsInput = z.infer<typeof AnalyzeCustomerHabitsInputSchema>;

const AnalyzeCustomerHabitsOutputSchema = z.object({
  customerName: z.string().describe('The name of the customer.'),
  overallSpending: z.number().describe('The total amount spent by the customer.'),
  favoriteCategories: z.array(z.string()).describe('The customer\u2019s favorite product categories.'),
  productRecommendations: z.array(z.string()).describe('Personalized product recommendations for the customer.'),
  loyaltyTier: z.string().describe('Customer loyalty tier based on their purchase history and spending habits.'),
});
export type AnalyzeCustomerHabitsOutput = z.infer<typeof AnalyzeCustomerHabitsOutputSchema>;

export async function analyzeCustomerHabits(input: AnalyzeCustomerHabitsInput): Promise<AnalyzeCustomerHabitsOutput> {
  return analyzeCustomerHabitsFlow(input);
}

const analyzeCustomerHabitsPrompt = ai.definePrompt({
  name: 'analyzeCustomerHabitsPrompt',
  input: {schema: AnalyzeCustomerHabitsInputSchema},
  output: {schema: AnalyzeCustomerHabitsOutputSchema},
  prompt: `You are an AI assistant specializing in analyzing customer shopping habits and providing personalized product recommendations.

  Analyze the purchase history of the customer provided. Based on their purchase history, provide the following information:
  - customerName: The name of the customer.
  - overallSpending: The total amount spent by the customer.
  - favoriteCategories: The customerâ€™s favorite product categories.
  - productRecommendations: Personalized product recommendations for the customer.
  - loyaltyTier: Customer loyalty tier based on their purchase history and spending habits. The loyalty tier can be either Bronze, Silver, or Gold. Customers with high purchase history and high overall spending can be classified as Gold tier.

  Customer Purchase History:
  {{#each purchaseHistory}}
  - Product: {{productName}}, Category: {{category}}, Date: {{purchaseDate}}, Quantity: {{quantity}}, Price: {{price}}
  {{/each}}

  Consider the above purchase history when providing the information. Your response should be in JSON format.
  `,
});

const analyzeCustomerHabitsFlow = ai.defineFlow(
  {
    name: 'analyzeCustomerHabitsFlow',
    inputSchema: AnalyzeCustomerHabitsInputSchema,
    outputSchema: AnalyzeCustomerHabitsOutputSchema,
  },
  async input => {
    const {output} = await analyzeCustomerHabitsPrompt(input);
    return output!;
  }
);
